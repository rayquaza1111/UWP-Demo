<Application
    x:Class="UWP_Demo.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UWP_Demo">

    <!--
    Application-level resources and styling for the UWP Demo application.
    This file defines the global styling, theme resources, and common UI elements
    that are shared across all pages in the application.
    -->

    <Application.Resources>
        <!-- 
        ResourceDictionary for application-wide resources including:
        - Color definitions for Light/Dark theme support
        - Typography styles for consistent text appearance
        - Common UI element styles (buttons, text boxes, etc.)
        - Converters for data binding scenarios
        -->
        <ResourceDictionary>
            <!-- Merge WinUI 2 resources for modern controls -->
            <ResourceDictionary.MergedDictionaries>
                <!-- WinUI 2 provides modern controls like NavigationView, InfoBar, etc. -->
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                
                <!-- Custom resource dictionaries can be added here -->
                <!-- <ResourceDictionary Source="Styles/ButtonStyles.xaml" /> -->
                <!-- <ResourceDictionary Source="Styles/TextStyles.xaml" /> -->
            </ResourceDictionary.MergedDictionaries>

            <!-- 
            Custom color resources for consistent theming throughout the app.
            These colors automatically adapt to Light/Dark theme changes.
            -->
            
            <!-- Primary accent colors -->
            <Color x:Key="PrimaryAccentColor">#FF0078D4</Color>
            <Color x:Key="SecondaryAccentColor">#FF106EBE</Color>
            <Color x:Key="SuccessColor">#FF107C10</Color>
            <Color x:Key="WarningColor">#FFFF8C00</Color>
            <Color x:Key="ErrorColor">#FFD13438</Color>

            <!-- Brushes based on the colors above -->
            <SolidColorBrush x:Key="PrimaryAccentBrush" Color="{StaticResource PrimaryAccentColor}" />
            <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource SecondaryAccentColor}" />
            <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}" />
            <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}" />
            <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}" />

            <!--
            Common margin and padding values for consistent spacing.
            Using these throughout the app ensures consistent visual hierarchy.
            -->
            <Thickness x:Key="SmallMargin">4</Thickness>
            <Thickness x:Key="MediumMargin">8</Thickness>
            <Thickness x:Key="LargeMargin">16</Thickness>
            <Thickness x:Key="ExtraLargeMargin">24</Thickness>

            <Thickness x:Key="SmallPadding">4</Thickness>
            <Thickness x:Key="MediumPadding">8</Thickness>
            <Thickness x:Key="LargePadding">16</Thickness>
            <Thickness x:Key="ExtraLargePadding">24</Thickness>

            <!--
            Common font sizes for consistent typography hierarchy.
            These follow Windows design guidelines for readable UI text.
            -->
            <x:Double x:Key="SmallFontSize">12</x:Double>
            <x:Double x:Key="MediumFontSize">14</x:Double>
            <x:Double x:Key="LargeFontSize">16</x:Double>
            <x:Double x:Key="ExtraLargeFontSize">20</x:Double>
            <x:Double x:Key="HeaderFontSize">24</x:Double>
            <x:Double x:Key="TitleFontSize">28</x:Double>

            <!--
            Common CornerRadius values for consistent rounded corners.
            Using consistent corner radius creates visual cohesion.
            -->
            <CornerRadius x:Key="SmallCornerRadius">2</CornerRadius>
            <CornerRadius x:Key="MediumCornerRadius">4</CornerRadius>
            <CornerRadius x:Key="LargeCornerRadius">8</CornerRadius>

            <!--
            Data converters for common binding scenarios.
            These eliminate the need for custom converter classes in simple cases.
            -->
            
            <!-- Converter to invert boolean values (useful for enabling/disabling controls) -->
            <!-- Example: IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanNegationConverter}}" -->
            <!-- Note: In a real app, these would be implemented as custom converter classes -->
            
            <!--
            Custom styles for common UI elements.
            These ensure consistent appearance and behavior across the application.
            -->

            <!-- Card-style container for grouping related content -->
            <Style x:Key="CardStyle" TargetType="Border">
                <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
                <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="{StaticResource MediumCornerRadius}" />
                <Setter Property="Padding" Value="{StaticResource LargePadding}" />
                <Setter Property="Margin" Value="{StaticResource MediumMargin}" />
            </Style>

            <!-- Header text style for page titles and section headers -->
            <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource HeaderFontSize}" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                <Setter Property="Margin" Value="{StaticResource MediumMargin}" />
            </Style>

            <!-- Subtitle text style for secondary headers -->
            <Style x:Key="SubtitleTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource LargeFontSize}" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
                <Setter Property="Margin" Value="{StaticResource SmallMargin}" />
            </Style>

            <!-- Body text style for regular content -->
            <Style x:Key="BodyTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Margin" Value="{StaticResource SmallMargin}" />
            </Style>

            <!-- Caption text style for small descriptive text -->
            <Style x:Key="CaptionTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource SmallFontSize}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="{ThemeResource TextFillColorTertiaryBrush}" />
                <Setter Property="Margin" Value="{StaticResource SmallMargin}" />
            </Style>

            <!-- Primary button style with accent color -->
            <Style x:Key="PrimaryButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource PrimaryAccentBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Padding" Value="16,8" />
                <Setter Property="Margin" Value="{StaticResource SmallMargin}" />
                <Setter Property="CornerRadius" Value="{StaticResource MediumCornerRadius}" />
                <Setter Property="FontWeight" Value="Medium" />
            </Style>

            <!-- Secondary button style with subtle appearance -->
            <Style x:Key="SecondaryButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="16,8" />
                <Setter Property="Margin" Value="{StaticResource SmallMargin}" />
                <Setter Property="CornerRadius" Value="{StaticResource MediumCornerRadius}" />
            </Style>

            <!-- Text input style for consistent form controls -->
            <Style x:Key="FormTextBoxStyle" TargetType="TextBox">
                <Setter Property="Padding" Value="{StaticResource MediumPadding}" />
                <Setter Property="Margin" Value="{StaticResource SmallMargin}" />
                <Setter Property="CornerRadius" Value="{StaticResource MediumCornerRadius}" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

            <!--
            Loading indicator style for consistent busy states.
            Used throughout the app to show when operations are in progress.
            -->
            <Style x:Key="LoadingProgressRingStyle" TargetType="ProgressRing">
                <Setter Property="Width" Value="32" />
                <Setter Property="Height" Value="32" />
                <Setter Property="Margin" Value="{StaticResource MediumMargin}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <!--
            Error message style for displaying validation errors and warnings.
            -->
            <Style x:Key="ErrorTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource ErrorBrush}" />
                <Setter Property="FontSize" Value="{StaticResource SmallFontSize}" />
                <Setter Property="Margin" Value="0,4,0,0" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <!--
            Success message style for positive feedback to users.
            -->
            <Style x:Key="SuccessTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource SuccessBrush}" />
                <Setter Property="FontSize" Value="{StaticResource SmallFontSize}" />
                <Setter Property="Margin" Value="0,4,0,0" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>